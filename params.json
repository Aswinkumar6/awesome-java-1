{"name":"Awesome-java","tagline":"A curated list of awesome Java frameworks, libraries and software. Inspired by awesome-python.","body":"# Awesome Java\r\n\r\nA curated list of awesome Java frameworks, libraries and software. Inspired by [awesome-python](https://github.com/vinta/awesome-python).\r\n\r\n- [Awesome Java](#awesome-java)\r\n    - [Build Tool](#build-tool)\r\n    - [Code Analysis](#code-analysis)\r\n    - [Compiler-compiler](#compiler-compiler)\r\n    - [Continuous Integration](#continuous-integration)\r\n    - [Database](#database)\r\n    - [Date and Time](#date-and-time)\r\n    - [Dependency Injection](#dependency-injection)\r\n    - [Development](#development)\r\n    - [Distributed Applications](#distributed-applications)\r\n    - [GUI](#gui)\r\n    - [Game Development](#game-development)\r\n    - [High Performance](#high-performance)\r\n    - [IDE](#ide)\r\n    - [JVM and JDK](#jvm-and-jdk)\r\n    - [JSON](#json)\r\n    - [Logging](#logging)\r\n    - [Machine Learning](#machine-learning)\r\n    - [Messaging](#messaging)\r\n    - [Miscellaneous](#miscellaneous)\r\n    - [Natural Language Processing](#natural-language-processing)\r\n    - [ORM](#orm)\r\n    - [PDF](#pdf)\r\n    - [Security](#security)\r\n    - [Science](#science)\r\n    - [Server](#server)\r\n    - [Template Engine](#template-engine)\r\n    - [Testing](#testing)\r\n    - [Utility](#utility)\r\n    - [Visualization](#visualization)\r\n    - [Web Crawling](#web-crawling)\r\n    - [Web Frameworks](#web-frameworks)\r\n    - [REST Frameworks](#rest-frameworks)\r\n- [Resources](#resources)\r\n    - [Communities](#communities)\r\n    - [Influential Books](#influential-books)\r\n    - [Podcasts](#podcasts)\r\n    - [Twitter](#twitter)\r\n    - [Websites](#websites)\r\n- [Contributing](#contributing)\r\n\r\n## Build Tool\r\n\r\n*Tools which handle the buildcycle of an application.*\r\n\r\n* [Apache Maven](http://maven.apache.org/) - Declarative build and dependency management which favors convention over configuration. It's preferable to Apache Ant which uses a rather procedural approach and can be rather difficult to maintain.\r\n* [Gradle](http://www.gradle.org/) - Incremental builds which are programmed via Groovy instead of declaring XML. Works well with Maven's dependency management and treats Ant scripts as first-class citizens.\r\n\r\n## Code Analysis\r\n\r\n*Tools that provide metrics and quality measurements of static code.*\r\n\r\n* [SonarQube](http://www.sonarqube.org/) - Inspection tool for code quality. It integrates with several external tools like Gradle, Jira and Jenkins and provides an overview of the metrics over time.\r\n* [FindBugs](http://findbugs.sourceforge.net/) - Static analysis of bytecode to find potential bugs.\r\n* [Metrics](http://metrics.codahale.com/) - Measures the behavior of critical components.\r\n\r\n## Compiler-compiler\r\n\r\n*Tools that create parsers, interpreters or compilers.*\r\n\r\n* [ANTLR](http://www.antlr.org/) - Complex full-featured framework for top-down parsing.\r\n* [JavaCC](https://javacc.java.net/) - More specific and slightly easier to learn. Has syntactic lookahead.\r\n\r\n## Continuous Integration\r\n\r\n*Tools which support continuously building, testing and releasing applications.*\r\n\r\n* [Jenkins](http://jenkins-ci.org/) - Provides server-based services. Often seen as the successor to Hudson, although it is still actively developed.\r\n\r\n## Database\r\n\r\n*Everything which simplifies interactions with the database.*\r\n\r\n* [jOOQ](http://www.jooq.org/) - Generates typesafe code based on SQL schema.\r\n* [Liquibase](http://www.liquibase.org/) - Source control for your database which can be embedded.\r\n\r\n## Date and Time\r\n\r\n*Libraries related to date and time.*\r\n\r\n* [Java 8 SE: Date and Time API](http://www.oracle.com/technetwork/articles/java/jf14-date-time-2125367.html) - Basically, it incorporates Joda-Time.\r\n* [Joda-Time](http://joda-time.sourceforge.net/) - De facto standard date/time-library before Java 8.\r\n\r\n## Dependency Injection\r\n\r\n*Libraries that help to realize the [Inversion of Control](http://en.wikipedia.org/wiki/Inversion_of_control) paradigm.*\r\n\r\n* [Dagger](http://square.github.io/dagger/) - Compile-time injection framework without reflection, mainly for Android.\r\n* [Google Guice](http://de.wikipedia.org/wiki/Google_Guice) - Lightweight but powerful framework.\r\n* [Spring](http://spring.io/) - Only Spring Context is needed for injections.\r\n* [Weld](http://docs.jboss.org/weld/reference/latest/en-US/html_single/) - CDI reference implementation.\r\n\r\n## Development\r\n\r\n*Integrated environments that augment the process of development at a fundamental level, e.g. classloading.*\r\n\r\n* [DCEVM](http://ssw.jku.at/dcevm/) - Modification of the JVM that allows unlimited redefinition of loaded classes at runtime.\r\n* [JRebel](http://zeroturnaround.com/software/jrebel/) - Instantly reloads code and configuration changes without redeploys.\r\n\r\n## Distributed Applications\r\n\r\n*Libraries and frameworks used to ease writing distributed and fault-tolerant applications.*\r\n\r\n* [Akka](http://akka.io) - Toolkit and runtime for building highly concurrent, distributed, and fault tolerant event-driven applications.\r\n* [JGroups](http://www.jgroups.org/) - Toolkit for reliable messaging and creating clusters whose nodes can send messages to each other.\r\n* [Apache ZooKeeper](http://zookeeper.apache.org/) - Coordination service with distributed configuration, synchronization, and naming registry for large distributed systems.\r\n\r\n## GUI\r\n\r\n*Libraries to create modern graphical user interfaces.*\r\n\r\n* [JavaFX](http://www.oracle.com/technetwork/java/javase/overview/javafx-overview-2158620.html) - The successor of Swing.\r\n* [Scene Builder](http://www.oracle.com/technetwork/java/javase/downloads/javafxscenebuilder-info-2157684.html) - Visual layout tool for JavaFX applications.\r\n\r\n## Game Development\r\n\r\n*Frameworks that support the development of games.*\r\n\r\n* [jMonkeyEngine](http://jmonkeyengine.org/) - Game engine for modern 3D development.\r\n* [LWJGL](http://lwjgl.org/) - Robust framework that abstracts libraries like OpenGL/CL/AL.\r\n* [libGDX](http://libgdx.badlogicgames.com/) - All-round cross-platform, high-level framework.\r\n\r\n## High Performance\r\n\r\n*Everything about high performance computation, from collections to specific libraries.*\r\n\r\n* [Trove](http://trove.starlight-systems.com/) - Primitive collections.\r\n* [HPPC](http://labs.carrotsearch.com/hppc.html) - Primitive collections.\r\n* [Disruptor](http://lmax-exchange.github.io/disruptor/) - Inter-thread messaging library.\r\n* [Javalution](http://javolution.org/) - Library for real-time and embedded systems.\r\n\r\n## IDE\r\n\r\n*Integrated development environments that try to simplify several aspects of development.*\r\n\r\n* [NetBeans](https://netbeans.org/) - Provides integration for several  Java SE and EE features starting with database access and servers to HTML5 and AngularJS.\r\n* [Eclipse](http://www.eclipse.org/) - Does a lot of things in the background. Noteworthy are its large amount of plugins.\r\n* [IntelliJ IDEA](http://www.jetbrains.com/idea/) - Supports a lot of JVM languages and provides good options for Android development. The commercial edition targets the enterprise sector.\r\n\r\n## JVM and JDK\r\n\r\n*Various implementations of the JVM/JDK.*\r\n\r\n* [HotSpot](http://openjdk.java.net/groups/hotspot/) - Official JVM.\r\n* [JDK 9](https://jdk9.java.net/) - Early access releases of JDK 9.\r\n* [OpenJDK](http://openjdk.java.net/) - Open source implementation.\r\n\r\n## JSON\r\n\r\n*Libraries that simplify JSON processing.*\r\n\r\n* [Google Gson](https://code.google.com/p/google-gson/) - Serializes Java objects to JSON and vice versa. Good performance with on-the-fly usage. \r\n* [Jackson](http://wiki.fasterxml.com/JacksonHome) - Similar to GSON but has performance gains if you need to instantiate the library more often.\r\n\r\n## Logging\r\n\r\n*Libraries that log the behavior of an application.*\r\n\r\n* [Apache Log4j 2](http://logging.apache.org/log4j/) - Complete rewrite of the previous version. Now has a powerful plugin and configuration architecture.\r\n* [Logback](http://logback.qos.ch/) - Founded by the same developer as Log4j and proves to be a robust logging library with interesting configuration options via Groovy.\r\n* [SLF4J](http://www.slf4j.org/) - Abstraction layer which is to be used with an implementation.\r\n\r\n## Machine Learning\r\n\r\n*Tools that provide specific statistical algorithms which allow to learn from data.*\r\n\r\n* [Apache Hadoop](http://hadoop.apache.org/) - Open-source software framework for storage and large-scale processing of data-sets on clusters of commodity hardware.\r\n* [Apache Mahout](https://mahout.apache.org/) - Scalable algorithms focused on collaborative filtering, clustering and classification.\r\n* [Apache Spark](http://spark.apache.org/) - Open-source data analytics cluster computing framework.\r\n* [Weka](http://www.cs.waikato.ac.nz/ml/weka/) - Collection of algorithms for data mining tasks ranging from pre-processing to visualization.\r\n\r\n## Messaging\r\n\r\n*Tools that help sending messages between clients to ensure protocol independency.*\r\n\r\n* [Apache ActiveMQ](http://activemq.apache.org/) - Open-source message broker that implements JMS and converts synchronous to asynchronous communication.\r\n* [Apache Kafka](http://kafka.apache.org/) - High-throughput distributed messaging system.\r\n* [JBoss HornetQ](http://hornetq.jboss.org/) - Clear, concise, modular and made to be embedded.\r\n\r\n## Miscellaneous\r\n\r\n*Everything else.*\r\n\r\n* [Jimfs](https://github.com/google/jimfs) - In-memory file system.\r\n* [Lombok](http://projectlombok.org/) - Code-generator which aims to reduce the verbosity of Java.\r\n* [RoboVM](http://www.robovm.org/) - Write native iOS apps in Java.\r\n\r\n## Natural Language Processing\r\n\r\n*Libraries that specialize on processing text.*\r\n\r\n* [Apache OpenNLP](https://opennlp.apache.org/) - Toolkit for common tasks like tokenization.\r\n* [LingPipe](http://alias-i.com/lingpipe/) - Toolkit for a variety of tasks ranging from POS tagging to sentiment analysis.\r\n* [Mallet](http://mallet.cs.umass.edu/) - Statistical natural language processing, document classification, clustering, topic modeling, etc.\r\n\r\n## ORM\r\n\r\n*APIs which handle the persistence of objects.*\r\n\r\n* [EclipseLink](https://www.eclipse.org/eclipselink/) - Supports a number of persistence standards: JPA, JAXB, JCA and SDO.\r\n* [Hibernate](http://hibernate.org/orm/) - Robust and widely used with an active community.\r\n\r\n## PDF\r\n\r\n*Everything that helps with the creation of PDF files.*\r\n\r\n* [Apache FOP](http://xmlgraphics.apache.org/fop/) - Creates PDF from XSL-FO.\r\n* [Apache PDFBox](http://pdfbox.apache.org/) - Toolbox for creating and manipulating PDF.\r\n* [JasperReports](http://community.jaspersoft.com/project/jasperreports-library) - Complex reporting engine.\r\n* [DynamicReports](http://dynamicreports.org/) - Simplifies JasperReports.\r\n* [iText](http://itextpdf.com/) - Easy to use PDF library which creates PDF files programmatically but requires a license for commercial purposes.\r\n\r\n## Security\r\n\r\n*Libraries that handle security, authentication, authorization or session management.*\r\n\r\n* [Apache Shiro](http://shiro.apache.org/) - Performs authentication, authorization, cryptography and session management.\r\n* [Keycloak](http://keycloak.jboss.org/) - Integrated SSO and IDM for browser apps and RESTful web services. Currently in beta but looks very promising.\r\n* [PicketLink](http://picketlink.org/) - PicketLink is an umbrella project for security and identity management for Java applications.\r\n* [Spring Security](http://projects.spring.io/spring-security/) - Focuses on authentication/authorization and protects against several attack vectors.\r\n\r\n## Science\r\n\r\n*Libraries for scientific computing and analysis.*\r\n\r\n* [JScience](http://www.jscience.org/) - Comprehensive framework of science related libraries.\r\n* [JTransforms](https://sites.google.com/site/piotrwendykier/software/jtransforms) - Multithread FFT library.\r\n* [Parallel Colt](https://sites.google.com/site/piotrwendykier/software/parallelcolt) - Multithread high performance scientific and technical computing.\r\n* [SCaVis](http://jwork.org/scavis/) - Environment for scientific computation, data analysis and data visualization.\r\n\r\n## Server\r\n\r\n*Servers which are specifically used to deploy applications.*\r\n\r\n* [GlassFish](https://glassfish.java.net/) - Open source reference implementation for Java EE sponsored by Oracle.\r\n* [WildFly](http://www.wildfly.org/) - Formerly known as JBoss and developed by Red Hat with extensive Java EE support.\r\n* [Jetty](http://www.eclipse.org/jetty/) - Lightweight, small server, often embedded in projects.\r\n* [Apache Tomcat](http://tomcat.apache.org/) - Robust all-round server for Servlet and JSP.\r\n* [Apache TomEE](http://tomee.apache.org/) - Tomcat plus Java EE.\r\n\r\n## Template Engine\r\n\r\n*Tools which substitute expressions in a template.*\r\n\r\n* [Apache Velocity](http://velocity.apache.org/) - Templates for HTML pages, emails or source code generation in general.\r\n* [FreeMarker](http://freemarker.org/) - General templating engine without any heavyweight or opinionated dependencies.\r\n* [JavaServer Pages](https://jsp.java.net/) - Aged templating for websites with custom tag libraries.\r\n* [Thymeleaf](http://www.thymeleaf.org/) - Aims to be a substitute for JSP and works for XML files in general.\r\n\r\n## Testing\r\n\r\n*Tools that test from object to interface level including performance and other benchmarks.*\r\n\r\n* [AssertJ](http://joel-costigliola.github.io/assertj/) - Fluent assertions.\r\n* [Apache JMeter](http://jmeter.apache.org/) - Functional testing and performance measurements.\r\n* [Arquillian](http://arquillian.org/) - Integration and functional testing platform with integration of Java EE containers.\r\n* [Calipher](https://code.google.com/p/caliper/) - Microbenchmarking framework.\r\n* [FEST](https://code.google.com/p/fest/) - Collection of testing libraries.\r\n* [Hamcrest](http://hamcrest.org/JavaHamcrest/) - Framework for writing declarative assertion matchers.\r\n* [JMH](http://openjdk.java.net/projects/code-tools/jmh/) - Microbenchmarking.\r\n* [JUnit](http://junit.org/) - Testing framework.\r\n* [Mockito](http://code.google.com/p/mockito/) - Creation of test double objects in automated unit tests for the purpose of TDD or BDD.\r\n* [Selenium](http://docs.seleniumhq.org/) - Portable software testing framework for web applications.\r\n* [TestNG](http://testng.org/) - Testing framework.\r\n* [VisualVM](http://visualvm.java.net/) - Visual interface for viewing detailed information about Java applications while they are running on a JVM.\r\n\r\n## Utility\r\n\r\n*Libraries which provide unspecific functionality, e.g. optimized datastructures.*\r\n\r\n* [Apache Commons](http://commons.apache.org/) - Provides different general purpose functions like configuration, validation, collections, file upload or XML processing.\r\n* [Google Guava](http://code.google.com/p/guava-libraries/) - Collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O, and so forth.\r\n\r\n## Visualization\r\n\r\n*Libraries or frameworks which allow you to visualize data.*\r\n\r\n* [Processing](https://www.processing.org/) - A project deeply rooted in visual art which allows you to program the visualization of data.\r\n\r\n## Web Crawling\r\n\r\n*Libraries that analyze the content of websites.*\r\n\r\n* [Apache Nutch](http://nutch.apache.org/) - Highly extensible, highly scalable Web crawler for production environment.\r\n* [Crawler4j](https://code.google.com/p/crawler4j/) - Simple lightweight alternative.\r\n* [jsoup](http://jsoup.org/) - Scrapes, parses, manipulates and cleans HTML.\r\n\r\n## Web Frameworks\r\n\r\n*Frameworks that handle the communication between the layers of an web application.*\r\n\r\n* [Apache Tapestry](http://tapestry.apache.org/) - Component oriented framework for creating dynamic, robust, highly scalable web applications in Java.\r\n* [Spring](http://projects.spring.io/spring-framework/) - Aims to simplify the development with Java EE and provides packages for dependency injection and aspect-oriented programming.\r\n* [Spring Boot](http://projects.spring.io/spring-boot/) - Microframework which simplifies the development of new Spring applications.\r\n* [Vaadin](https://vaadin.com/) - Event-driven framework build on top of GWT. Uses server-side architecture with Ajax on the client-side. \r\n* [Google Web Toolkit](http://www.gwtproject.org/) - Toolbox which includes a Java-to-JavaScript compiler for client-side code, XML parser, API for RPC, JUnit integration, internationalization support and widgets for the GUI.\r\n* [Apache Wicket](http://wicket.apache.org/) - Component-based web application framework similar to Tapestry with a stateful GUI.\r\n* [Play](http://www.playframework.com/) - Uses convention over configuration, hot code reloading and display of errors in the browser.\r\n* [PrimeFaces](http://primefaces.org/) - JSF framework which has a free and a commercial version with support. Provides several frontend components.\r\n* [Spark](http://www.sparkjava.com/why.html) - Unique framework which focuses not on complex MVC patterns but on rapid development.\r\n\r\n## REST Frameworks\r\n\r\n*Frameworks specifically for creating RESTful services.*\r\n\r\n* [Dropwizard](https://dropwizard.github.io/dropwizard/) - Opinionated framework for setting up modern web applications, includes Jetty, Jackson, Jersey and Metrics.\r\n* [Jersey](https://jersey.java.net/) - JAX-RS reference implementation.\r\n* [RESTEasy](http://resteasy.jboss.org/) - Fully certified and portable implementation of the JAX-RS specification.\r\n\r\n# Resources\r\n\r\n## Communities\r\n\r\n*Active discussions.*\r\n\r\n* [r/java](http://www.reddit.com/r/java) - Subreddit for the Java community.\r\n* [stackoverflow](http://stackoverflow.com/questions/tagged/java) - Question/answer platform.\r\n\r\n## Influential Books\r\n\r\n*Books about Java that had a high impact and are still worth reading.*\r\n\r\n* [Effective Java (2nd Edition)](http://www.amazon.com/Effective-Java-Edition-Joshua-Bloch/dp/0321356683)\r\n* [Java Concurrency in Practice](http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601)\r\n* [Thinking in Java](http://www.amazon.com/Thinking-Java-Edition-Bruce-Eckel/dp/0131872486)\r\n\r\n## Podcasts\r\n\r\n*Something to listen to while programming.*\r\n\r\n* [The Java Posse](http://www.javaposse.com/)\r\n\r\n## Twitter\r\n\r\n*People to follow.*\r\n\r\n* [Adam Bien](https://twitter.com/AdamBien/)\r\n* [Antonio Goncalves](https://twitter.com/agoncal/)\r\n* [Arun Gupta](https://twitter.com/arungupta/)\r\n* [Ed Burns](https://twitter.com/edburns)\r\n* [Java](https://twitter.com/java/)\r\n* [Java EE](https://twitter.com/Java_EE/)\r\n* [Java.net](https://twitter.com/javanetbuzz/)\r\n* [Java Magazine](https://twitter.com/Oraclejavamag)\r\n* [Mark Reinhold](https://twitter.com/mreinhold)\r\n* [OpenJDK](https://twitter.com/OpenJDK)\r\n* [Pete Muir](https://twitter.com/plmuir/)\r\n* [Reza Rahman](https://twitter.com/reza_rahman)\r\n* [Simon Maple](https://twitter.com/sjmaple)\r\n* [Tim Boudreau](https://twitter.com/kablosna)\r\n\r\n## Websites\r\n\r\n*Sites to read.*\r\n\r\n* [Java.net](http://java.net/)\r\n* [JavaWorld](http://www.javaworld.com/)\r\n* [Javalobby](http://java.dzone.com/)\r\n\r\n# Contributing\r\n\r\nContributions are very welcome!\r\n\r\nPlease have a look at [CONTRIBUTING](https://github.com/akullpp/awesome-java/blob/master/CONTRIBUTING.md) for guidelines. \r\n\r\nTopics which have no libraries as of yet are located in [TOPICS](https://github.com/akullpp/awesome-java/blob/master/TOPICS.md).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}